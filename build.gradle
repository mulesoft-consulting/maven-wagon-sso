group 'com.brady'
version '1.0-SNAPSHOT'

configurations {
    provided
}

if (!hasProperty('mavenHome')) {
    ext.mavenHome = 'usr/local/Cellar/maven/3.5.0/libexec'
}

apply plugin: 'java'
apply plugin: 'groovy'

sourceSets {
    main {
        compileClasspath += configurations.provided
    }
    test {
        compileClasspath += configurations.provided
        runtimeClasspath += configurations.provided
    }
}

sourceCompatibility = 1.8

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    // Maven does not come with Groovy
    compile "org.codehaus.groovy:groovy-all:2.4.6"
    // is already built-in to Maven
    provided 'org.apache.maven.wagon:wagon-provider-api:2.12'
    provided 'org.apache.maven.wagon:wagon-http:2.12'
    provided group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
    //compile files('/usr/local/Cellar/maven/3.5.0/libexec/lib/wagon-http-2.12-shaded.jar')
    // we need 4.5.3 to get Windows SPNEGO friendly auth. Maven 3.5.0 already includes base 4.5.3
    // but not the Windows pieces, so add that here
    def httpClientVersion = '4.5.3'
    compile "org.apache.httpcomponents:httpclient:${httpClientVersion}"
    compile "org.apache.httpcomponents:httpclient-win:${httpClientVersion}"
    compile group: 'org.jsoup', name: 'jsoup', version: '1.11.1'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testRuntime group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.25'
    testCompile 'org.hamcrest:hamcrest-library:1.3'
    testCompile 'org.hamcrest:hamcrest-core:1.3'
    testCompile 'org.apache.ant:ant:1.9.7'
    testCompile 'io.vertx:vertx-web:3.5.0'
}

jar {
    from {
        // Maven comes with everything marked provided above
        configurations.compile.collect { z -> zipTree(z) }
    }
}

println "Assuming Maven home directory is '${mavenHome}'"

def jarFile = jar.outputs.files[0]
def libExt = new File(new File(mavenHome, 'lib'), 'ext')
task install(type: Copy, dependsOn: jar) {
    description 'Installs the wagon JAR into your Maven home directory'
    from jarFile
    into libExt
}

task uninstall(type: Delete) {
    description 'Uninstalls the wagon JAR from your Maven home directory'
    delete new File(libExt, jarFile.name)
}

clean {
    // we download a copy of Maven during our tests, clean it out too
    delete 'tmp'
    // IntelliJ
    delete 'out'
}
